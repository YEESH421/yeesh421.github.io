/*
 * OSU Global Javascript Override
 * Commit Hash: a6d1dd349592fb5e50a9a12bd5b04c91bb9632b3
 * author: carmen@osu.edu
 */

var restyle = document.createElement("style");
restyle.type = "text/css";
restyle.innerHTML = ".add_course_link } #left-side {overflow:visible,z-index:9999}";
$("head").append(restyle);
	
/*
 * First pass page grabs
 */

var _alpha = {};
(function() {
	// Attempt removals before page ready if possible
	var path = /^\/courses\/([0-9]+)/;
	var res = path.exec(location.pathname);
	var courseID;
	if(window.coursenum !== undefined) {
		courseID = window.coursenum;
	} else if(res == null) {
		courseID = null;
	} else {
		courseID = res[1];
	}
	$(".delete_course_link").remove();
	$(".reset_course_content_button").remove();
	$(".copy_course_link").remove();
	if(courseID) {
		$("[href='/courses/" + courseID + "/confirm_action?event=delete']").remove();
	}
})();

/**
 * Functions to fire when the document is finished building
 */
$(document).ready(function() {
	
	/* 
	 * Setup some general variables
	 */
	
	switch(window.location.host) {
		case "osu.instructure.com":
			_alpha.bus = "https://alpha-bus.it.ohio-state.edu/";
			break;
		case "osu.test.instructure.com":
			_alpha.bus = "https://alpha-test-bus.it.ohio-state.edu/";
			break;
		case "osu.beta.instructure.com":
			_alpha.bus = "https://alpha-dev.it.ohio-state.edu:3443/";
			break;
		default:
			console.warn("Unable to determine appropriate Alpha instance to notify");
	}
	
	/* Attempt to divine the course number from URL if window.coursenum is NOT set */
	var path = /^\/courses\/([0-9]+)/;
	var res = path.exec(location.pathname);
	var courseID;
	if(window.coursenum !== undefined) {
		courseID = window.coursenum;
	} else if(res == null) {
		courseID = null;
	} else {
		courseID = res[1];
	}

	/* Initial pass to find and remove any problematic functionality */
	$(".delete_course_link").remove();
	$(".reset_course_content_button").remove();
	if(courseID) {
		$("[href='/courses/" + courseID + "/confirm_action?event=delete']").remove();
	}
	
	/* Basic ACL */
	if(ENV.USER_EMAIL) {
		switch(window.location.host) {
			case "osu.test.instructure.com":
			case "osu.beta.instructure.com":
				var weakACL = [
								"ritter.18@osu.edu",
								"bate.1@osu.edu",
								"qin.42@osu.edu",
								"begue.16@osu.edu",
								"chu.472@osu.edu",
								"wilkins.92@osu.edu",
								"hariths.1@osu.edu",
								"carr.413@osu.edu",
								"anderson.1368@osu.edu",
								"palvankar.2@osu.edu",
								"nardacci.1@osu.edu",
								"rake.9@osu.edu",
								"rake.7@osu.edu",
								"vernon.51@osu.edu",
								"herriott.10@osu.edu",
								"putz.8@osu.edu",
								"mamo.6@osu.edu",
								"karliak.1@osu.edu",
								"peters.466@osu.edu",
								"hickey.184@osu.edu",
								"ferguson.762@osu.edu",
								"strathearn.3@osu.edu",
								"groeniger.3@osu.edu",
								"wade.199@osu.edu",
								"hensley.220@osu.edu",
								"noble.126@osu.edu"
								];
				
				if(window.location.search == "?allowme")
					localStorage.setItem("_ACLoverride","_allow");
				if(window.location.search == "?endme")
					localStorage.removeItem("_ACLoverride");
				
				var override = localStorage.getItem("_ACLoverride");
					if(override != "_allow" && ENV.current_user_roles.indexOf("admin") == -1 && weakACL.indexOf(ENV.USER_EMAIL.toLowerCase()) == -1) {
						console.warn("ACL Reject Detected: admin?" + ENV.current_user_roles.indexOf("admin") + ", ACL?" + weakACL.indexOf(ENV.USER_EMAIL.toLowerCase()));
						console.warn(JSON.stringify(ENV,null,4));
						console.warn(JSON.stringify(weakACL,null,4));
						/* Redirect Should be ready *
						window.location = "https://carmen.osu.edu";
						/* */
					} else {
						console.log("ACL Allowed")
					}
				break;	
		}
	}
	
	/*
	 * Forced Styling Adjustments
	 */
	
	/* Adjust visibility on group elements [Note that global CSS for some reason was NOT working for this] */
	$("#left-side").css({"overflow":"visible","z-index":9999});
	$(".add_course_link").css({"display":"none"});
	
	/* Disable the input box for the SIS Code field for the course */
	try {
		if(ENV.current_user_roles.indexOf("admin") == -1) {
			$("#course_sis_source_id").attr("disabled","true");
			$("#account_sis_source_id").attr("disabled","true");
		}
	} catch(exception) {
		console.error(exception);
	}
	
	/* Ensure Removal of Problem functionality */
	var loop, test;
	var badLinkPatterns = [
	                       /.courses.[0-9]+.confirm_action.event=conclude/i
	                       ];

	try {
		$(".delete_course_link").remove();
		$(".reset_course_content_button").remove();
	} catch(exception) {
		console.error("Exception while removing problem buttons:\n", exception, "\n", exception.stack);
	}
	$("#right-side-wrapper a").each(function(index, elem) {
		if(elem.href != null) {
			for(loop=0;loop<badLinkPatterns.length;loop++) {
				try {
					if(badLinkPatterns[loop].test(elem.href)) {
						elem.remove();
					}
				} catch(exception) {
					console.error("Exception while removing problem button:\n", exception, "\n", exception.stack);
				}
			}
		} else {
//			console.log("Null link: " + elem.href, elem);
		}
	});
	
	/*
	 * Add Links to settings page
	 */
	
	var settings = $("#left-side #section-tabs");
	if(courseID != null && settings.length > 0) {
		try {
			/* Setup variables for creating the links in the section */
			var linking;
			var Link = function(url, label, disable) {
				url = url.replace(/\{coursenum\}/ig, courseID);
				var element = $("<li class='section'><a href='" + url + "'>" + label + "</a></li>");
				if(disable) {
					element.addClass("section-tab-hidden");
					element.append('<span class="screenreader-only" id="inactive_nav_link">* ' + disable + '</span>');
				}
				return element;
			};
			
			/* Settings page link */
			$.getJSON(_alpha.bus + "api/coursesearch/find?lmsid=" + courseID).then(function(json) {
				if(json.result) {
					if(json.result.course_code) {
						linking = new Link("https://library.osu.edu/carmenlibrarylink/landing?oc=" + json.result.course_code, "Library Link");
						settings.append(linking);
					} else {
						if(json.result.status == 404) {
							console.warn("Library Link Not Found(course=" + courseID + "):\n", json);
						} else {
							console.warn("Library Link Code Missing(course=" + courseID + "):\n", json);
						}
						linking = new Link("https://library.osu.edu/carmenlibrarylink/landing?oc=" + json.result.course_code, "Library Link");
						settings.append(linking);
					}
				} else {
					console.error("Library Link Identifier missing in response:\n", json);
				}
			}).fail(function(failure) {
				console.error("Library Link Identifier failed to fetch:\n", failure);
			});
		} catch(exception) {
			console.error("Library link not added: ",exception);
		}
	} else {
		console.warn("Settings not found (course=" + courseID + "):\n", settings);
	}

	/*
	 * Rebind All Logo Instances to return to our homepage
	 */
	switch(window.location.host) {
		case "osu.instructure.com":
			$(".ic-app-header__logomark").attr("href","https://carmen.osu.edu");
			break;
		case "osu.test.instructure.com":
			$(".ic-app-header__logomark").attr("href","https://carmen-perftest.it.ohio-state.edu");
			break;
		case "osu.beta.instructure.com":
			 $(".ic-app-header__logomark").attr("href","https://alpha-dev.it.ohio-state.edu");
			break;	
	}
	
	/*
	 * Event notifications to push to Alpha
	 */
	
	var _updateKey = "_alpha-CourseUpdate";
	
	/**
	* Notify Alpha that a course has changed
	*/
	var notify = function(course) {
		console.log("Notify Course Updated (id=" + course + ", current=" + courseID + ")");
		if(course != null) {
			$.getJSON(_alpha.bus + "api/course_rescan/rescan/scan?course=" + course, function(reply) {
				
			})
			.done(function() {
				localStorage.removeItem(_updateKey);
			})
			.fail(function(err) {
				console.error("Failed to update course status: ", err);
			});
			if(res) {
				console.log("Response from Alpha:", res);
			}
		}
	};
	
	var note = function() {
		console.log("Storing Course Update (id=" + courseID + ")");
		localStorage.setItem(_updateKey,courseID);
	};
	
	var updating = localStorage.getItem(_updateKey);
	if(updating) {
		notify(updating);
	}
	
	
	$(".wizard_popup_link").on('click', function() {
		setTimeout(function() {
			$("#wizard_publish_course").on('click', function() {
				setTimeout(function() {
					$("button:contains('Publish the Course')").on('click', function() {
						note()
					});
				}, 0);
			});
		}, 0);
	});
	
	/* Publish and Unpublish are bound together. Publish has good selectors however Unpublish does not */
	$(".edit_course button").on('click', note);
	$(".edit_course button").on('click', note);
	
/*	
*	$("#unauthorized_message h2").html("Access Issue");
*	$("#unauthorized_message p").html("You currently do not have access to this page. Your enrollment may still be processing or you may need to check your class list to ensure that you are in this class.");
*/
});